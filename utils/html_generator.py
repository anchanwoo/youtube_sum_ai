def html_generator(title, image_url, sections):
    """
    Generates an HTML string with a handwriting style using Tailwind CSS.

    :param title: Main title for the page ("Title 1").
    :param image_url: URL of the image to be placed below the main title.
    :param sections: A list of dictionaries, each containing:
        {
            "title": str (Title for the section e.g. "Title 2"),
            "bullets": [
                ("bold_text", "regular_text"),
                ("bold_text_2", "regular_text_2"),
                ...
            ]
        }
    :return: A string of HTML content.
    """
    # Start building the HTML
    html_template = f"""<!DOCTYPE html>
<html lang=\"en\">
<head>
  <meta charset=\"UTF-8\" />
  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />
  <title>Youtube Made Simple</title>
  <!-- Using Tailwind CSS CDN -->
  <link
    rel=\"stylesheet\"
    href=\"https://unpkg.com/tailwindcss@2.2.19/dist/tailwind.min.css\"
  />
  <!-- Google Font for a handwriting style -->
  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />
  <link
    href=\"https://fonts.googleapis.com/css2?family=Patrick+Hand&display=swap\"
    rel=\"stylesheet\"
  />
  <style>
    body {{
      background-color: #f7fafc;
      font-family: 'Patrick Hand', sans-serif;
    }}
    h1, h2 {{
      font-weight: 700;
      margin-bottom: 0.5rem;
    }}
    ul {{
      list-style-type: disc;
      margin-left: 1.5rem;
      margin-bottom: 1.5rem;
    }}
    li {{
      margin-bottom: 1rem;
    }}
    ol {{
      list-style-type: decimal;
      margin-left: 2rem;
      margin-top: 0.5rem;
    }}
    ol li {{
      margin-bottom: 0.2rem;
    }}
    .bullet-content ol {{
      margin-top: 0.3rem;
      margin-bottom: 0.3rem;
    }}
  </style>
</head>
<body class=\"min-h-screen flex items-center justify-center p-4\">
  <div class=\"max-w-2xl w-full bg-white rounded-2xl shadow-lg p-6\">
    <!-- Attribution header -->
    <div class="mb-6 text-right text-gray-500 text-sm">
      Generated by 
      <a href="https://github.com/The-Pocket/Tutorial-Youtube-Made-Simple" 
         class="underline hover:text-gray-700">
        Youtube Made Simple
      </a>
    </div>
    
    <!-- Title 1 -->
    <h1 class=\"text-4xl text-gray-800 mb-4\">{title}</h1>
    <!-- Image below Title 1 -->
    <img
      src=\"{image_url}\"
      alt=\"Placeholder image\"
      class=\"rounded-xl mb-6\"
    />"""

    # For each section, add a sub-title (Title 2, etc.) and bullet points.
    for section in sections:
        section_title = section.get("title", "")
        bullets = section.get("bullets", [])

        # Add the section's title (Title 2, Title 3, etc.)
        html_template += f"""
    <h2 class=\"text-2xl text-gray-800 mb-4\">{section_title}</h2>
    <ul class=\"text-gray-600\">"""

        # Create list items for each bullet pair
        for bold_text, normal_text in bullets:
            html_template += f"""
      <li>
        <strong>{bold_text}</strong><br />
        <div class="bullet-content">{normal_text}</div>
      </li>"""

        html_template += "\n    </ul>"

    # Close the main container and body
    html_template += """
  </div>
</body>
</html>"""

    return html_template

def streamlit_html_generator(title, image_url, sections):
    """
    StreamlitÏö© HTML Ï°∞Í∞Å ÏÉùÏÑ±Í∏∞ (CSSÏôÄ container ÏóÜÏù¥)
    
    :param title: Main title for the page
    :param image_url: URL of the image to be placed below the main title
    :param sections: List of dictionaries with title and bullets
    :return: HTML fragment for Streamlit
    """
    
    # StreamlitÏö© Ïä§ÌÉÄÏùº (HTML Ï°∞Í∞ÅÏóê Ï†ÅÌï©)
    html_fragment = f"""
<style>
    .summary-container {{
        font-family: 'Patrick Hand', 'Comic Sans MS', cursive;
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        border-radius: 20px;
        padding: 2rem;
        margin: 1rem 0;
        box-shadow: 0 10px 25px rgba(0,0,0,0.1);
        border: 2px solid rgba(255,255,255,0.3);
    }}
    .summary-title {{
        color: #2d3748;
        font-size: 2.5rem;
        font-weight: bold;
        text-align: center;
        margin-bottom: 1.5rem;
        text-shadow: 2px 2px 4px rgba(0,0,0,0.1);
    }}
    .summary-image {{
        width: 100%;
        max-width: 600px;
        height: auto;
        border-radius: 15px;
        margin: 0 auto 2rem auto;
        display: block;
        box-shadow: 0 8px 20px rgba(0,0,0,0.15);
    }}
    .summary-section-title {{
        color: #4a5568;
        font-size: 1.8rem;
        font-weight: bold;
        margin: 2rem 0 1rem 0;
        border-bottom: 3px solid #e2e8f0;
        padding-bottom: 0.5rem;
    }}
    .summary-list {{
        list-style: none;
        padding: 0;
        margin: 0;
    }}
    .summary-item {{
        background: rgba(255,255,255,0.7);
        margin: 1rem 0;
        padding: 1.5rem;
        border-radius: 15px;
        border-left: 5px solid #4299e1;
        box-shadow: 0 4px 12px rgba(0,0,0,0.05);
        transition: transform 0.2s ease;
    }}
    .summary-item:hover {{
        transform: translateY(-2px);
        box-shadow: 0 6px 18px rgba(0,0,0,0.1);
    }}
    .summary-question {{
        color: #2b6cb0;
        font-weight: bold;
        font-size: 1.1rem;
        margin-bottom: 0.8rem;
        line-height: 1.4;
    }}
    .summary-answer {{
        color: #4a5568;
        font-size: 1rem;
        line-height: 1.6;
        padding-left: 1rem;
        border-left: 3px solid #bee3f8;
        background: rgba(255,255,255,0.5);
        padding: 1rem;
        border-radius: 10px;
        margin-top: 0.5rem;
    }}
    .summary-attribution {{
        text-align: center;
        color: #718096;
        font-size: 0.9rem;
        margin-top: 2rem;
        padding-top: 1rem;
        border-top: 2px solid #e2e8f0;
    }}
    .summary-attribution a {{
        color: #4299e1;
        text-decoration: none;
        font-weight: bold;
    }}
    .summary-attribution a:hover {{
        text-decoration: underline;
    }}
</style>

<div class="summary-container">
    <div class="summary-attribution">
        üé¨ Generated by 
        <a href="https://sum-qking.streamlit.app/" target="_blank">SUM-Q</a>
        - YouTube ÏöîÏïΩ AI
    </div>
    
    <h1 class="summary-title">{title}</h1>
    
    <img src="{image_url}" alt="YouTube Ïç∏ÎÑ§Ïùº" class="summary-image" />
"""

    # Í∞Å ÏÑπÏÖò Ï∂îÍ∞Ä
    for section in sections:
        section_title = section.get("title", "")
        bullets = section.get("bullets", [])
        
        html_fragment += f"""
    <h2 class="summary-section-title">{section_title}</h2>
    <ul class="summary-list">"""
        
        # Í∞Å ÏßàÎ¨∏-ÎãµÎ≥Ä Ïåç Ï∂îÍ∞Ä
        for bold_text, normal_text in bullets:
            # Q:ÏôÄ A: Î∂ÑÎ¶¨
            if bold_text.startswith("Q:"):
                question = bold_text[2:].strip()
            else:
                question = bold_text.strip()
                
            if normal_text.startswith("A:"):
                answer = normal_text[2:].strip()
            else:
                answer = normal_text.strip()
            
            html_fragment += f"""
        <li class="summary-item">
            <div class="summary-question">‚ùì {question}</div>
            <div class="summary-answer">üí° {answer}</div>
        </li>"""
        
        html_fragment += "\n    </ul>"
    
    html_fragment += """
</div>
"""
    
    return html_fragment

if __name__ == "__main__":
    sections_data = [
        {
            "title": "Title 2",
            "bullets": [
                ("First line of bullet 1", "Additional normal text."),
                ("First line of bullet 2", "Another detail in normal weight."),
            ]
        },
        {
            "title": "Title 3",
            "bullets": [
                ("First line of bullet 3", "More text in normal weight for bullet 3. <ol><li>1</li><li>2</li><li>3</li></ol>"),
            ]
        }
    ]
    html_content = html_generator("Title 1", "https://picsum.photos/600/300?grayscale", sections_data) 
    with open("output.html", "w") as file:
        file.write(html_content)
